% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RandomForestSolver.R
\docType{methods}
\name{RandomForestSolver}
\alias{RandomForestSolver}
\alias{run,RandomForestSolver-method}
\alias{run.RandomForestSolver}
\title{Create a Solver class object using the Random Forest Solver}
\usage{
RandomForestSolver(mtx.assay = matrix(), quiet = TRUE)

\S4method{run}{RandomForestSolver}(obj, target.gene, tfs, tf.weights = rep(1,
  length(tfs), extraArgs = list()))
}
\arguments{
\item{mtx.assay}{An assay matrix of gene expression data}

\item{quiet}{A logical denoting whether or not the solver should print output}

\item{obj}{An object of class RandomForestSolver}

\item{target.gene}{A designated target gene that should be part of the mtx.assay data}

\item{tfs}{The designated set of transcription factors that could be associated with the target gene.}

\item{tf.weights}{A set of weights on the transcription factors (default = rep(1, length(tfs)))}

\item{extraArgs}{Modifiers to the Random Forest solver}
}
\value{
A Solver class object with Random Forest as the solver

A list containing various parameters of the Random Forest fit.
}
\description{
Create a Solver class object using the Random Forest Solver

Run the Random Forest Solver
}
\examples{
solver <- RandomForestSolver()

# Load included Alzheimer's data, create a TReNA object with Random Forest as solver, and solve
load(system.file(package="TReNA", "extdata/ampAD.154genes.mef2cTFs.278samples.RData"))
trena <- TReNA(mtx.assay = mtx.sub, solver = "randomForest")
target.gene <- "APOE"
tfs <- setdiff(rownames(mtx.sub), target.gene)
tbl <- solve(trena, target.gene, tfs)
}
\seealso{
Other solver methods: \code{\link{LassoSolver}}
}
