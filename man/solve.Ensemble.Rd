% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EnsembleSolver.R
\docType{methods}
\name{run,EnsembleSolver-method}
\alias{run,EnsembleSolver-method}
\alias{run.EnsembleSolver}
\alias{solve.Ensemble}
\title{Run the Ensemble Solver}
\usage{
\S4method{run}{EnsembleSolver}(obj, target.gene, tfs, tf.weights = rep(1,
  length(tfs)), extraArgs = list())
}
\arguments{
\item{obj}{An object of class TReNA with "ensemble" as the solver string}

\item{target.gene}{A designated target gene that should be part of the mtx.assay data}

\item{tfs}{The designated set of transcription factors that could be associated with the target gene}

\item{tf.weights}{A set of weights on the transcription factors (default = rep(1, length(tfs)))}

\item{extraArgs}{Modifiers to the Ensemble solver, including "solver.list", "gene.cutoff", and solver-named
arguments denoting extraArgs that correspond to a given solver (e.g. "lasso")}
}
\value{
A data frame containing the scores for all solvers and a composite score relating the target gene to each transcription factor
}
\description{
Given a TReNA object with Ensemble as the solver and a list of solvers (default = "all.solvers"), estimate coefficients for each transcription factor as a predictor of the target gene's expression level. The final scores for the ensemble method combine all specified solvers to create a composite score for each transcription factor.
}
\examples{
# Load included Alzheimer's data, create a TReNA object with LASSO as solver, and solve
load(system.file(package="TReNA", "extdata/ampAD.154genes.mef2cTFs.278samples.RData"))
trena <- TReNA(mtx.assay = mtx.sub, solver = "ensemble")
target.gene <- "MEF2C"
tfs <- setdiff(rownames(mtx.sub), target.gene)
tbl <- solve(trena, target.gene, tfs)

# Solve the same problem, but supply extra arguments that change alpha for LASSO to 0.8 and also
# Change the gene cutoff from 10\% to 20\%
tbl <- solve(trena, target.gene, tfs, extraArgs = list("gene.cutoff" = 0.2, "lasso" = list("alpha" = 0.8)))

# Solve the original problem with default cutoff and solver parameters, but use only 4 solvers
tbl <- solve(trena, target.gene, tfs, extraArgs = list("solver.list" = c("lasso", "randomForest", "pearson", "bayesSpike")))
}
\seealso{
Other solver methods: \code{\link{run,BayesSpikeSolver-method}},
  \code{\link{run,LassoPVSolver-method}},
  \code{\link{run,LassoSolver-method}},
  \code{\link{run,PearsonSolver-method}},
  \code{\link{run,RandomForestSolver-method}},
  \code{\link{run,RidgeSolver-method}},
  \code{\link{run,SpearmanSolver-method}},
  \code{\link{run,SqrtLassoSolver-method}}
}
